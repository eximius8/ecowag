# Generated by Django 4.0.4 on 2022-04-18 14:33

from django.db import migrations
import litsource.models
import wagtail.blocks
import wagtail.fields
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('substance', '0005_substance_cas_number_substance_other_names'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='substance',
            options={'verbose_name': 'Компонент', 'verbose_name_plural': 'Компоненты'},
        ),
        migrations.AlterField(
            model_name='substance',
            name='airprops',
            field=wagtail.fields.StreamField([('SafetyClassAir', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в воздухе'))])), ('PDKss', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе средне-суточное зоны (ПДКсс) [мг/м3]', min_value=0, required=True))])), ('PDKmr', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе максимальная разовая (ПДКмр) [мг/м3]', min_value=0, required=True))])), ('PDKrz', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе рабочей зоны (ПДКрз) [мг/м3]', min_value=0, required=True))])), ('OBUVair', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в воздухе [мг/м3]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='dwprops',
            field=wagtail.fields.StreamField([('SafetyClassDrinkWater', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в питьевой воде'))])), ('PDKw', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в питьевой воде (ПДКв) [мг/л]', min_value=0, required=True))])), ('ODUw', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Ориентировочные допустимые уровни в питьевой воде (ОДУ) [мг/л]', min_value=0, required=True))])), ('OBUVw', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в питьевой воде (ОБУВ) [мг/л]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='ecoprops',
            field=wagtail.fields.StreamField([('Persistancy', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'Образование более токсичных продуктов, в т.ч. обладающих отдаленными эффектами или новыми свойствами'), ('2', 'Образование продуктов с более выраженным влиянием других критериев опасности'), ('3', 'Образование продуктов, токсичность которых близка к токсичности исходного вещества'), ('4', 'Образование менее токсичных продуктов')], label='Персистентность'))])), ('Bioaccum', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'Выраженное накопление во всех звеньях'), ('2', 'Накопление в нескольких звеньях'), ('3', 'Накопление в одном из звеньев'), ('4', 'Накопление отсутствует')], label='Биоаккумуляция'))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='foodprops',
            field=wagtail.fields.StreamField([('PDKpp', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация вещества в пищевых продуктах [мг/кг]', min_value=0, required=True))])), ('MDS', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Максимально допустимое содержание [мг/кг]', min_value=0, required=True))])), ('MDU', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Максимально допустимый уровень [мг/кг]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='fwprops',
            field=wagtail.fields.StreamField([('SafetyClassFishWater', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в воде рыбохозяйственного значения'))])), ('PDKfw', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в воде рыбохозяйственного значения (ПДКрх) [мг/л]', min_value=0, required=True))])), ('OBUVfw', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в воде рыбохозяйственного значения (ОБУВ) [мг/л]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='ldprops',
            field=wagtail.fields.StreamField([('LD50', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Средняя смертельная доза компонента в миллиграммах действующего вещества на 1 кг живого веса, вызывающая гибель 50% подопытных животных при однократном пероральном введении в унифицированных условиях [мг/кг]', min_value=0, required=True))])), ('LC50', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Средняя смертельная концентрация вещества, вызывающая гибель 50% подопытных животных при ингаляционном поступлении в унифицированных условиях [мг/м3]', min_value=0, required=True))])), ('LC50water', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Средняя смертельная концентрация вещества в воде, вызывающая гибель 50% всех взятых в опыт гидробионтов (например, рыб) через 96 часов [мг/л/96 ч]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='props',
            field=wagtail.fields.StreamField([('Kow', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Коэффициент распределения в системе октанол/вода при 20° C', min_value=0, required=True))])), ('Solubility', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Растворимость компонента отхода (вещества) в воде при 20° C (мг/л)', min_value=0, required=True))])), ('COD', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Химическое потребление кислорода, выраженное в миллилитрах O2/100 л', min_value=0, required=True))])), ('BOD5', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Биологическое потребление кислорода, выраженное в миллилитрах O2/л за 5 суток', min_value=0, required=True))])), ('Cnas', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Насыщающая концентрация вещества в воздухе при 20° C и нормальном давлении [мг/м3]', min_value=0, required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='soilprops',
            field=wagtail.fields.StreamField([('SafetyClassSoil', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'не установлен')], label='Класс опасности в почве'))])), ('PDKp', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Предельно допустимая концентрация в почве (ПДКп) [мг/кг]', min_value=0, required=True))])), ('ODKp', wagtail.blocks.StructBlock([('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True)), ('value', wagtail.blocks.FloatBlock(label='Ориентировочно допустимые концентрации в почве (ОДК) [мг/кг]', min_value=0, required=True))]))], blank=True, null=True),
        ),
    ]
