# Generated by Django 4.0.3 on 2022-04-12 11:34

from django.db import migrations
import litsource.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('substance', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='substance',
            name='ldprops',
            field=wagtail.core.fields.StreamField([('ld50', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Средняя смертельная доза компонента в миллиграммах действующего вещества на 1 кг живого веса, вызывающая гибель 50% подопытных животных при однократном пероральном введении в унифицированных условиях [мг/кг]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('lc50', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Средняя смертельная концентрация вещества, вызывающая гибель 50% подопытных животных при ингаляционном поступлении в унифицированных условиях [мг/м3]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('lc50water', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Средняя смертельная концентрация вещества в воде, вызывающая гибель 50% всех взятых в опыт гидробионтов (например, рыб) через 96 часов [мг/л/96 ч]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='airprops',
            field=wagtail.core.fields.StreamField([('SclsAir', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в воздухе')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKss', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе средне-суточное зоны (ПДКсс) [мг/м3]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKmr', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе максимальная разовая (ПДКмр) [мг/м3]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKrz', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в воздухе рабочей зоны (ПДКрз) [мг/м3]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('obuvair', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в воздухе [мг/м3]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='dwprops',
            field=wagtail.core.fields.StreamField([('SclsDWater', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в питьевой воде')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKw', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в питьевой воде (ПДКв) [мг/л]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('oduw', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Ориентировочные допустимые уровни в питьевой воде (ОДУ) [мг/л]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('obuvw', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в питьевой воде (ОБУВ) [мг/л]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='ecoprops',
            field=wagtail.core.fields.StreamField([('presistancy', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'Образование более токсичных продуктов, в т.ч. обладающих отдаленными эффектами или новыми свойствами'), ('2', 'Образование продуктов с более выраженным влиянием других критериев опасности'), ('3', 'Образование продуктов, токсичность которых близка к токсичности исходного вещества'), ('4', 'Образование менее токсичных продуктов')], label='Персистентность')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('bioaccum', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'Выраженное накопление во всех звеньях'), ('2', 'Накопление в нескольких звеньях'), ('3', 'Накопление в одном из звеньев'), ('4', 'Накопление отсутствует')], label='Биоаккумуляция')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='fwprops',
            field=wagtail.core.fields.StreamField([('SclsFWater', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'IV класс')], label='Класс опасности в воде рыбохозяйственного значения')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKfw', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в воде рыбохозяйственного значения (ПДКрх) [мг/л]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('obuvfw', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Ориентировочно безопасные уровни воздействия в воде рыбохозяйственного значения (ОБУВ) [мг/л]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='substance',
            name='soilprops',
            field=wagtail.core.fields.StreamField([('SclsSoil', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.ChoiceBlock(choices=[('1', 'I класс'), ('2', 'II класс'), ('3', 'III класс'), ('4', 'не установлен')], label='Класс опасности в почве')), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('PDKp', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Предельно допустимая концентрация в почве (ПДКп) [мг/кг]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))])), ('ODKp', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.FloatBlock(label='Ориентировочно допустимые концентрации в почве (ОДК) [мг/кг]', min_value=0, required=True)), ('source', wagtail.snippets.blocks.SnippetChooserBlock(litsource.models.LitSource, label='Источник литературы для значения', required=True))]))], blank=True, null=True),
        ),
    ]
